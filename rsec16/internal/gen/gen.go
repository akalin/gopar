package main

import (
	"bytes"
	"flag"
	"fmt"
	"go/format"
	"io/ioutil"
	"log"

	"github.com/akalin/gopar/gf2p16"
)

func main() {
	var buf bytes.Buffer
	buf.WriteString(`// Code generated by rsec16/internal/gen. DO NOT EDIT.

package rsec16

import (
	"github.com/akalin/gopar/gf2p16"
)

var generators = []gf2p16.T {`)

	for i := 0; i < (1 << 16); i++ {
		if i%64 == 0 {
			buf.WriteString("\n")
		}
		if i%3 == 0 || i%5 == 0 || i%17 == 0 || i%257 == 0 {
			continue
		}
		buf.WriteString(fmt.Sprintf("%d, ", gf2p16.T(2).Pow(uint32(i))))
	}
	buf.WriteString("\n}\n")

	outFile := flag.String("out", "", "output file")
	flag.Parse()
	if outFile == nil {
		log.Fatal("-out is required")
	}
	b, err := format.Source(buf.Bytes())
	if err != nil {
		log.Fatal(err)
	}
	err = ioutil.WriteFile(*outFile, b, 0600)
	if err != nil {
		log.Fatal(err)
	}
}
